// Generated by Dagger (https://dagger.dev).
package com.example.livecricketdemo.di;

import android.content.Context;
import com.example.livecricketdemo.network.ApiRestService;
import com.example.livecricketdemo.network.interceptor.HeaderInterceptor;
import com.example.livecricketdemo.network.interceptor.NetworkInterceptor;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_GetApiRestServiceFactory implements Factory<ApiRestService> {
  private final NetworkModule module;

  private final Provider<Context> appContextProvider;

  private final Provider<NetworkInterceptor> networkInterceptorProvider;

  private final Provider<HeaderInterceptor> headerInterceptorProvider;

  public NetworkModule_GetApiRestServiceFactory(NetworkModule module,
      Provider<Context> appContextProvider, Provider<NetworkInterceptor> networkInterceptorProvider,
      Provider<HeaderInterceptor> headerInterceptorProvider) {
    this.module = module;
    this.appContextProvider = appContextProvider;
    this.networkInterceptorProvider = networkInterceptorProvider;
    this.headerInterceptorProvider = headerInterceptorProvider;
  }

  @Override
  public ApiRestService get() {
    return getApiRestService(module, appContextProvider.get(), networkInterceptorProvider.get(), headerInterceptorProvider.get());
  }

  public static NetworkModule_GetApiRestServiceFactory create(NetworkModule module,
      Provider<Context> appContextProvider, Provider<NetworkInterceptor> networkInterceptorProvider,
      Provider<HeaderInterceptor> headerInterceptorProvider) {
    return new NetworkModule_GetApiRestServiceFactory(module, appContextProvider, networkInterceptorProvider, headerInterceptorProvider);
  }

  public static ApiRestService getApiRestService(NetworkModule instance, Context appContext,
      NetworkInterceptor networkInterceptor, HeaderInterceptor headerInterceptor) {
    return Preconditions.checkNotNullFromProvides(instance.getApiRestService(appContext, networkInterceptor, headerInterceptor));
  }
}
