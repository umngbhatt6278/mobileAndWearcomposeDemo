// Generated by Dagger (https://dagger.dev).
package com.example.livecricketdemo.network;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HostSelectionInterceptor_Factory implements Factory<HostSelectionInterceptor> {
  private final Provider<Context> contextProvider;

  public HostSelectionInterceptor_Factory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public HostSelectionInterceptor get() {
    return newInstance(contextProvider.get());
  }

  public static HostSelectionInterceptor_Factory create(Provider<Context> contextProvider) {
    return new HostSelectionInterceptor_Factory(contextProvider);
  }

  public static HostSelectionInterceptor newInstance(Context context) {
    return new HostSelectionInterceptor(context);
  }
}
